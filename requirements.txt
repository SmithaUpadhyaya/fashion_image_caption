# local package
-e .

#Python Version 3.7.9
# external requirements

#General Library
pandas==1.3.5
numpy==1.20
tqdm

pyarrow==8.0.0 #Required to work with parquet file type. These is one engine that is used for parquet file
fastparquet==0.8.1 #Required to work with parquet file type. This is also one engine that is used for parquet file

#Download the image from web using imageurl
requests==2.28.2

#Not required since in the end worked with jpeg file only. 
#Since found that hdf5 was large and taking much time to read image data from hdf5, compare to jpeg file for each image
#h5py==3.8.0 #Read and Save numpy data in hdf5. 

#Library for EDA
ipywidgets 
opencv-python==4.5.4.60
matplotlib==3.5.3
seaborn==0.12.2
WordCloud

#Pre-process text library
#pycontractions #Does not work with py3.9. So copied the code from there github
nltk==3.8.1

#Model Library
scikit-learn
#tensorflow==2.11.0 #Final model BLIP2 does not have TF compatible in HuggingFace. So went with Pytorch

#Library required for BLIP2 model and VisionEncoderDecoder model
rouge_score==0.1.2
accelerate==0.20.3
transformers==4.30.2 #Help: https://huggingface.co/docs/transformers/v4.20.1/en/installation#installation
datasets==2.13.0 #Huggingface dataset, Help: https://huggingface.co/docs/datasets/installation
evaluate==0.4.0 #Huggingface evaluate library, Help: https://huggingface.co/docs/evaluate/index
peft==0.4.0# #0.4.0 was dev version. In case version is not release. Install using pip install -q git+https://github.com/huggingface/peft.git
bitsandbytes==0.39.0
pytorch==2.0.0

#Deploy 
streamlit==1.16.0 

#Step 1 Create a Virtual enviroment with VSCode inside project folder
#py -<<python_version>> -m venv <<your_environment_name>>

#Step 2 Activate the Virtual Environment by calling Activate.bat 
#\<<your_environment_name>>\Scripts\Activate.bat

#Step 3: Select this Environment as Interpreatr in VScode
#-> Ctrl+Shift+P
#-> Select from drop down or type : "Python: Select Interpreter"
#-> Select "Enter interpreter path..."
#-> Select "Find.." and browse to folder and select" \Scripts\python.exe" in the new environment folder that we created.

#Step 4: [Optional]: Upgrade pip in your_enviroment
#-> Open the Terminal
#-> Terminal should show <<your_environment_name>> in the command line. If not execute Step 2 again
#-> pip install pip --upgrade

#Step 5: Install the requirement dll
#pip install -r requirements.txt